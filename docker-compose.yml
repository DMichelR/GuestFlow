services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=guestflow;Username=postgres;Password=postgres_password
    networks:
      - guestflow-network
    depends_on:
      - postgres
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_PATH=http://api:8000
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - api
    networks:
      - guestflow-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=guestflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/primary-init.sql:/docker-entrypoint-initdb.d/primary-init.sql
    networks:
      - guestflow-network
    restart: unless-stopped
    command: >
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c max_logical_replication_workers=4
      -c max_worker_processes=8

  postgres_replica:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=guestflow
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    networks:
      - guestflow-network
    restart: unless-stopped
    depends_on:
      - postgres
    command: >
      -c wal_level=logical
      -c max_logical_replication_workers=4
      -c max_worker_processes=8
      -c max_replication_slots=10
      -c max_wal_senders=10

  metabase:
    image: metabase/metabase:latest
    ports:
      - "3001:3000"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase_db
      - MB_DB_PORT=5432
      - MB_DB_USER=postgres
      - MB_DB_PASS=postgres_password
      - MB_DB_HOST=postgres
    networks:
      - guestflow-network
    depends_on:
      - postgres_replica
      - postgres
    restart: unless-stopped

  replica_init:
    image: postgres:15
    depends_on:
      - postgres
      - postgres_replica
    volumes:
      - ./postgres/replica-init.sh:/replica-init.sh
    networks:
      - guestflow-network
    entrypoint: ["/bin/bash", "/replica-init.sh"]

networks:
  guestflow-network:
    driver: bridge

volumes:
  postgres_data:
  postgres_replica_data:
